<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
  <mapper namespace="PDS">   
   
    <resultMap id="PdsListMap" type="com.spring.pds.vo.PdsVo">
      <result property="idx"        column=""  javaType="int" />
      <result property="menu_id"    column=""  javaType="string" />
      <result property="title"      column=""  javaType="string" />
      <result property="cont"       column=""  javaType="string" />
      <result property="writer"     column=""  javaType="string" />
      <result property="regdate"    column=""  javaType="string" />
      <result property="readcount"  column=""  javaType="int" />
      <result property="bnum"        column="" javaType="int" />
      <result property="lvl"        column=""  javaType="int" />
      <result property="step"       column=""  javaType="int" />
      <result property="nref"       column=""  javaType="int" />    
      <result property="delnum"     column=""  javaType="int" />    
      
      <result property="filescount"  column="" javaType="int" />    
    </resultMap> 
   
    <select id="PdsList"  statementType="CALLABLE"
        parameterType="hashmap"
        resultType="com.spring.pds.vo.PdsVo" >
      {CALL  PKG_PDS.PROC_PDS_LIST(
        #{menu_id,      mode=IN,   jdbcType = VARCHAR}, 
        #{nowpage,      mode=IN,   jdbcType = INTEGER}, 
        #{pagecount,    mode=IN,   jdbcType = INTEGER}, 
        #{recordcount,  mode=OUT,  jdbcType = INTEGER}, 
        #{result,       mode=OUT,  jdbcType = CURSOR,
             javaType   = ResultSet, resultMap  = PdsListMap
        } 
      )}
    </select> 
    
    <resultMap id="FileListMap" type="com.spring.pds.vo.FilesVo">
      <result property="file_num"    column=""  javaType="int" />
      <result property="idx"         column=""  javaType="int" />
      <result property="filename"    column=""  javaType="string" />
      <result property="fileext"     column=""  javaType="string" />
      <result property="sfilename"   column=""  javaType="string" />
    </resultMap>
    
    <select id="FileList"  statementType="CALLABLE"
        parameterType="hashmap"
        resultType="com.spring.pds.vo.FilesVo" >
      {CALL  PKG_PDS.PROC_PDS_FILELIST(         
        #{idx,          mode=IN,   jdbcType = INTEGER},         
        #{result,       mode=OUT,  jdbcType = CURSOR,
             javaType   = ResultSet, resultMap  = FileListMap
        } 
      )}
    </select> 
    
    
    <select id="PdsContent"  statementType="CALLABLE"
      	parameterType="hashmap"
        resultType="com.spring.pds.vo.PdsVo" >
        {CALL   PKG_PDS.PROC_PDS_CONTENT(
           #{ idx,     mode = IN,   jdbcType=INTEGER},
           #{ result,  mode = OUT,  jdbcType=CURSOR,
                javaType  = ResultSet, resultMap = PdsListMap
           }
        )}  
    </select>
   
      
    <insert id="PdsInsert" statementType="CALLABLE" 
        parameterType="hashmap" >
    {CALL PKG_PDS.PROC_PDS_INSERT(
    	#{menu_id,    mode=IN,  jdbcType=VARCHAR},
    	#{title,      mode=IN,  jdbcType=VARCHAR},
    	#{cont,       mode=IN,  jdbcType=VARCHAR},
    	#{writer,     mode=IN,  jdbcType=VARCHAR},
    	#{bnum,       mode=IN,  jdbcType=INTEGER},
    	#{lvl,        mode=IN,  jdbcType=INTEGER},
    	#{step,       mode=IN,  jdbcType=INTEGER},
    	#{nref,       mode=IN,  jdbcType=INTEGER},  
    	#{filenames,  mode=IN,
    	  jdbcTypeName=FILE_ARRAY,
    	  typeHandler=com.spring.pds.service.typehandler.ListMapTypeHandler
    	},
    	#{fileexts,  mode=IN, 
    	  jdbcTypeName=FILE_ARRAY,
    	  typeHandler=com.spring.pds.service.typehandler.ListMapTypeHandler
    	},    	
    	#{sfilenames,  mode=IN,
    	  jdbcTypeName=FILE_ARRAY,
    	  typeHandler=com.spring.pds.service.typehandler.ListMapTypeHandler
    	}
    )}   
    </insert>
    
    <!--  jdbcType=NUMERIC" javaType="DOUBLE"  -->
     <update id="PdsUpdate" statementType="CALLABLE" 
          parameterType="hashmap" >
    {CALL PKG_PDS.PROC_PDS_UPDATE(
    	#{idx,        mode=IN,  jdbcType=INTEGER},
    	#{title,      mode=IN,  jdbcType=VARCHAR},
    	#{cont,       mode=IN,  jdbcType=VARCHAR}
    )}   
    </update>
     
   
   
   
  </mapper>  
    